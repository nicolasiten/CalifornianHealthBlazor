// <auto-generated />
using System;
using CalifornianHealthBlazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CalifornianHealthBlazor.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CalifornianHealthBlazor.Data.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsultantFk")
                        .HasColumnType("int");

                    b.Property<int?>("PatientFk")
                        .HasColumnType("int");

                    b.Property<DateTime>("SelectedDate")
                        .HasColumnType("date");

                    b.Property<int?>("TimeSlotFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientFk");

                    b.HasIndex("TimeSlotFk");

                    b.HasIndex("ConsultantFk", "TimeSlotFk", "SelectedDate")
                        .IsUnique()
                        .HasFilter("[ConsultantFk] IS NOT NULL AND [TimeSlotFk] IS NOT NULL");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("CalifornianHealthBlazor.Data.Entities.Consultant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consultant");
                });

            modelBuilder.Entity("CalifornianHealthBlazor.Data.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("CalifornianHealthBlazor.Data.Entities.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsultantFk")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsultantFk");

                    b.ToTable("TimeSlot");
                });

            modelBuilder.Entity("CalifornianHealthBlazor.Data.Entities.Appointment", b =>
                {
                    b.HasOne("CalifornianHealthBlazor.Data.Entities.Consultant", "Consultant")
                        .WithMany("Appointments")
                        .HasForeignKey("ConsultantFk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CalifornianHealthBlazor.Data.Entities.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientFk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CalifornianHealthBlazor.Data.Entities.TimeSlot", "TimeSlot")
                        .WithMany("Appointments")
                        .HasForeignKey("TimeSlotFk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CalifornianHealthBlazor.Data.Entities.TimeSlot", b =>
                {
                    b.HasOne("CalifornianHealthBlazor.Data.Entities.Consultant", "Consultant")
                        .WithMany("TimeSlots")
                        .HasForeignKey("ConsultantFk")
                        .OnDelete(DeleteBehavior.NoAction);
                });
#pragma warning restore 612, 618
        }
    }
}
